"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[426],{1842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var l=n(5893),r=n(1151);const i={layout:"default",title:"Local Folder Listener",nav_order:1,parent:"Agent File Folder Listener"},s="Local Folder Listener",o={id:"integration-agent/file-folder-listener/local-folder-listener",title:"Local Folder Listener",description:"Overview",source:"@site/docs/integration-agent/file-folder-listener/local-folder-listener.md",sourceDirName:"integration-agent/file-folder-listener",slug:"/integration-agent/file-folder-listener/local-folder-listener",permalink:"/integration-platform-docs/docs/integration-agent/file-folder-listener/local-folder-listener",draft:!1,unlisted:!1,editUrl:"https://github.com/douglaslloyd/IntegrationPlatform/tree/main/docs/integration-agent/file-folder-listener/local-folder-listener.md",tags:[],version:"current",frontMatter:{layout:"default",title:"Local Folder Listener",nav_order:1,parent:"Agent File Folder Listener"},sidebar:"tutorialSidebar",previous:{title:"file-folder-listener",permalink:"/integration-platform-docs/docs/integration-agent/file-folder-listener/"},next:{title:"Monitoring Agent Status",permalink:"/integration-platform-docs/docs/integration-agent/monitoring-agent-status"}},d={},a=[{value:"Overview",id:"overview",level:2},{value:"Listener Configuration",id:"listener-configuration",level:2},{value:"Properties",id:"properties",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"local-folder-listener",children:"Local Folder Listener"}),"\n",(0,l.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(t.p,{children:"The Local Folder Listener monitors file folders for files and will execute a pre-defined Job Configuration (config-id) when triggered."}),"\n",(0,l.jsx)(t.h2,{id:"listener-configuration",children:"Listener Configuration"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"listeners.yml"}),"\n(ProgramDataDirectory)/Actian/FileFolderListener/conf/listeners.yml\n",(0,l.jsx)(t.strong,{children:"OR"}),"\n/etc/opt/actian/integration-agent/conf/listeners.yml (Linux)"]}),"\n",(0,l.jsx)(t.p,{children:"NOTE: indentation is critical for YAML syntax!"}),"\n",(0,l.jsx)(t.p,{children:"Example:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"listeners:\n  - id: local-listener-folder-accounts\n    config-id: 90378\n    listener-type: agent\n    active: true\n    source-directory: C:/DataSources/accounts\n    include-pattern: ^Accounts.*\n    exclude-pattern: ^skipme.txt\n    filename-override: Accounts.txt\n  - id: local-listener-folder-contacts\n    config-id: 90379\n    listener-type: agent\n    active: true\n    source-directory: C:/DataSources/contacts\n    include-pattern: ^Contacts.*\n    exclude-pattern: ^skipme.txt\n    filename-override: Contacts.txt\n"})}),"\n",(0,l.jsxs)(t.blockquote,{children:["\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"Note:"}),"\nAgent Service must be restarted for any configuration changes to take effect."]}),"\n"]}),"\n",(0,l.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"id"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"A unique identifier for the listener."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"listener-type"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Available listener types: agent."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"config-id"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The Job Configuration id to run in Integration Manager."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"active"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Whether or not this listener is active."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"source-directory"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The source directory to monitor for new files."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"include-pattern"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Includes files if the file name matches the regular expression pattern you specify. See ",(0,l.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet",children:"Cheatsheet"}),", ",(0,l.jsx)(t.a,{href:"https://www.regexpal.com/",children:"RegexPal"})]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"exclude-pattern"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsxs)(t.td,{style:{textAlign:"left"},children:["Excludes files if the file name matches the regular expression pattern you specify. See ",(0,l.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Cheatsheet",children:"Cheatsheet"}),", ",(0,l.jsx)(t.a,{href:"https://www.regexpal.com/",children:"RegexPal"})]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"filename-override"}),(0,l.jsx)(t.td,{style:{textAlign:"left"}}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"This value will override the filename passed to Integration Manager, regardless of the original source file name. The original source file name will always be used for backup and error files."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"auto-create-directories"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"true"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Automatically create missing directories in the source-directory path."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"recursive"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Look for files in all the sub-directories of the source-directory as well."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"flatten-directories"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"false"}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Flatten the file name path to strip any leading paths, so it\u2019s just the file name. This allows you to consume recursively into sub-directories, but only track the filename for backup and error purposes."})]})]})]})]})}function f(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var l=n(7294);const r={},i=l.createContext(r);function s(e){const t=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);